# -*- coding: utf-8 -*-
"""BasesE3.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1vA16L7OeA7ECRD_v_8Pt7YiEPzAQfp_G

##Create DB
"""

import pandas as pd
import numpy as np

impares = pd.ExcelFile('impares.xlsx')

generos_i = pd.read_excel(impares, 'genero')

multimedia_i = pd.read_excel(impares, 'multimedia')

pago_i = pd.read_excel(impares, 'pago')

proveedores_i = pd.read_excel(impares, 'proveedores')
proveedores_i.rename(columns = {'id':'pro_id'}, inplace = True)

suscripciones_i = pd.read_excel(impares, 'suscripciones')
suscripciones_i.rename(columns = {'id':'subs_id'}, inplace = True)

usuarios_i = pd.read_excel(impares, 'usuarios')
usuarios_i.rename(columns = {'id':'uid'}, inplace = True)

visualizacion_i = pd.read_excel(impares, 'Hoja7')

"""##Edit DB"""

pelicula = multimedia_i[["pid", "titulo", "duracion", "clasificacion", "puntuacion", "a√±o"]]
pelicula = pelicula[pelicula['pid'].notna()]
pelicula.sort_values(by=['pid'], ascending = True, inplace=True)
pelicula = pelicula[~pelicula.duplicated()]
pelicula.reset_index(drop=True, inplace=True)
pelicula.set_index('pid', inplace=True)

serie = multimedia_i[["sid", "serie", "clasificacion", "puntuacion", "a√±o"]]
serie = serie[serie['sid'].notna()]
serie.sort_values(by=['sid'], ascending = True, inplace=True)
serie = serie[~serie.duplicated()]
serie.reset_index(drop=True, inplace=True)
serie.set_index('sid', inplace=True)

genero_peli = multimedia_i[["pid", "genero"]]
genero_peli = genero_peli[genero_peli['pid'].notna()]
genero_peli.sort_values(by=['pid'], ascending = True, inplace=True)
genero_peli = genero_peli[~genero_peli.duplicated()]
genero_peli.reset_index(drop=True, inplace=True)
genero_peli.set_index('pid', inplace=True)


genero_serie = multimedia_i[["sid", "genero"]]
genero_serie = genero_serie[genero_serie['sid'].notna()]
genero_serie.sort_values(by=['sid'], ascending = True, inplace=True)
genero_serie = genero_serie[~genero_serie.duplicated()]
genero_serie.reset_index(drop=True, inplace=True)
genero_serie.set_index('sid', inplace=True)


capitulo = multimedia_i[["cid", "sid", "titulo", "duracion", "numero"]]
capitulo = capitulo[capitulo['cid'].notna()]
capitulo.sort_values(by=['sid', 'cid'], ascending = [True, True], inplace=True)
capitulo = capitulo[~capitulo.duplicated()]
capitulo.reset_index(drop=True, inplace=True)
capitulo.set_index('cid', inplace=True)
capitulo.rename(columns = {'numero':'temporada'}, inplace = True)


proveedor_ps = proveedores_i[["pro_id", "nombre", "costo"]]
proveedor_ps = proveedor_ps[~proveedor_ps.duplicated()]
proveedor_ps.sort_values(by=['pro_id'], ascending = True, inplace=True)
proveedor_ps.reset_index(drop=True, inplace=True)
proveedor_ps.set_index('pro_id', inplace=True)


catalogo_s = proveedores_i[["pro_id", "sid"]]
catalogo_s = catalogo_s[catalogo_s['sid'].notna()]
catalogo_s = catalogo_s[~catalogo_s.duplicated()]
catalogo_s.sort_values(by=['sid'], ascending = True, inplace=True)
catalogo_s.reset_index(drop=True, inplace=True)
catalogo_s.set_index('pro_id', inplace=True)


catalogo_p = proveedores_i[["pro_id", "pid", "precio"]]
catalogo_p = catalogo_p[~catalogo_p['precio'].notna()]
catalogo_p_incluida = catalogo_p[["pro_id", "pid"]]
catalogo_p_incluida = catalogo_p_incluida[catalogo_p_incluida['pid'].notna()]
catalogo_p_incluida.sort_values(by=['pid'], ascending = True, inplace=True)
catalogo_p_incluida.reset_index(drop=True, inplace=True)
catalogo_p_incluida.set_index('pro_id', inplace=True)


catalogo_p_arriendo = proveedores_i[["pro_id", "pid", "precio", "disponibilidad"]]
catalogo_p_arriendo = catalogo_p_arriendo[catalogo_p_arriendo['precio'].notna()]
catalogo_p_arriendo.sort_values(by=['pid'], ascending = True, inplace=True)
catalogo_p_arriendo.reset_index(drop=True, inplace=True)
catalogo_p_arriendo.set_index('pro_id', inplace=True)


usuarios_i.sort_values(by=['uid'], ascending = True, inplace=True)
usuarios_i.reset_index(drop=True, inplace=True)
usuarios_i.set_index('uid', inplace=True)


visualizacion_p = visualizacion_i[["uid", "pid", "fecha"]]
visualizacion_p = visualizacion_p[visualizacion_p['pid'].notna()]
visualizacion_p.sort_values(by=['uid'], ascending = True, inplace=True)
visualizacion_p.reset_index(drop=True, inplace=True)
visualizacion_p.set_index('uid', inplace=True)


visualizacion_c = visualizacion_i[["uid", "cid", "fecha"]]
visualizacion_c = visualizacion_c[visualizacion_c['cid'].notna()]
visualizacion_c.sort_values(by=['uid'], ascending = True, inplace=True)
visualizacion_c.reset_index(drop=True, inplace=True)
visualizacion_c.set_index('uid', inplace=True)


subscripcion_p = suscripciones_i[["subs_id", "uid", "pro_id", "estado", "fecha_inicio"]]
subscripcion_p.sort_values(by=['subs_id'], ascending = True, inplace=True)
subscripcion_p.reset_index(drop=True, inplace=True)
subscripcion_p.set_index('subs_id', inplace=True)


subscripcion_p_terminada = suscripciones_i[["subs_id", "fecha_termino"]]
subscripcion_p_terminada = subscripcion_p_terminada[subscripcion_p_terminada['fecha_termino'].notna()]
subscripcion_p_terminada.sort_values(by=['subs_id'], ascending = True, inplace=True)
subscripcion_p_terminada.reset_index(drop=True, inplace=True)
subscripcion_p_terminada.set_index('subs_id', inplace=True)


pelicula.to_csv('pelicula.csv', sep=',', encoding='utf-8')
serie.to_csv('serie.csv', sep=',', encoding='utf-8')
genero_peli.to_csv('genero_peli.csv', sep=',', encoding='utf-8')
genero_serie.to_csv('genero_serie.csv', sep=',', encoding='utf-8')
capitulo.to_csv('capitulo.csv', sep=',', encoding='utf-8')
proveedor_ps.to_csv('proveedor_ps.csv', sep=',', encoding='utf-8')
catalogo_s.to_csv('catalogo_s.csv', sep=',', encoding='utf-8')
catalogo_p_incluida.to_csv('catalogo_p_incluida.csv', sep=',', encoding='utf-8')
catalogo_p_arriendo.to_csv('pelicula.csv', sep=',', encoding='utf-8')
catalogo_p_arriendo.to_csv('pelicula.csv', sep=',', encoding='utf-8')
visualizacion_p.to_csv('visualizacion_p.csv', sep=',', encoding='utf-8')
visualizacion_c.to_csv('visualizacion_c.csv', sep=',', encoding='utf-8')
subscripcion_p.to_csv('subscripcion_p', sep=',', encoding='utf-8')
subscripcion_p_terminada.to_csv('subscripcion_p_terminada.csv', sep=',', encoding='utf-8')